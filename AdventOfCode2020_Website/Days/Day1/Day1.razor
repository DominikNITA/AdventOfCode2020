@page "/day1"

@inject HttpClient Http
<h2>Day1 - Report Repair</h2>

@if (entries == null)
{
    <p>Loading report entries...</p>
}
else
{
    <h3>Entries:</h3>
    <p class="text-wrap">@String.Join(", ", entries)</p>

    <h4>Total entries count: </h4>
    <h4>@entries.Length</h4>
    <h3>Part One</h3>
    <button @onclick="FindTwoEntriesThatSumTo2020" class="btn btn-success">Calculate</button>
    @if (result != null)
    {
        <h4>Results:</h4>
        <p>Array access count: @arrayAccess</p>
        <p>First Number: @number1</p>
        <p>Second Number: @number2</p>
        <p>Result: @result</p>
    }

    <h3>Part Two</h3>
    <button @onclick="FindThreeEntriesThatSumTo2020" class="btn btn-success">Calculate</button>
    @if (p2_result != null)
    {
        <h4>Results:</h4>
        <p>Array access count: @p2_arrayAccess</p>
        <p>First Number: @p2_number1</p>
        <p>Second Number: @p2_number2</p>
        <p>Third Number: @p2_number3</p>
        <p>Result: @p2_result</p>
    }
}

@code {
    string fileName = "day1.txt";
    int[] entries;
    //Two numbers that sum up to 2020
    int number1, number2;
    //Result of multiplication of both numbers
    int? result;
    int arrayAccess = 0;

    //part two variables
    int p2_number1, p2_number2, p2_number3;
    int? p2_result;
    int p2_arrayAccess = 0;

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetStringAsync("inputs/day1.txt");
        entries = result.Split('\n').Select(x =>
        {
            if (int.TryParse(x, out int res))
                return res;
            else
                return int.MaxValue;
        }).Where(n => n < 2020).OrderBy(n => n).ToArray();
    }

    private void FindTwoEntriesThatSumTo2020()
    {
        for (int i = 0; i < entries.Length - 1; i++)
        {
            for (int j = i; j < entries.Length - 1; j++)
            {
                arrayAccess++;
                if (entries[i] + entries[j] == 2020)
                {
                    number1 = entries[i];
                    number2 = entries[j];
                    result = entries[i] * entries[j];
                    return;
                }
            }
        }
    }

    private void FindThreeEntriesThatSumTo2020()
    {
        for (int i = 0; i < entries.Length - 1; i++)
        {
            for (int j = i; j < entries.Length - 1; j++)
            {
                for (int k = j; k < entries.Length - 1; k++)
                {
                    p2_arrayAccess++;
                    if (entries[i] + entries[j] + entries[k] == 2020)
                    {
                        p2_number1 = entries[i];
                        p2_number2 = entries[j];
                        p2_number3 = entries[k];
                        p2_result = entries[i] * entries[j] * entries[k];
                        return;
                    }
                }
            }
        }
    }
}
